# –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á
#–®–∞–≥ 1
class Task:
    def __init__(self, description, deadline):
        self.description = description
        self.deadline = deadline
        self.completed = False

    def mark_completed(self):
        self.completed = True

    def __str__(self):
        status = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ" if self.completed else "‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ"
        return f"{self.description} (–¥–æ {self.deadline}) ‚Äî {status}"


class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self, description, deadline):
        task = Task(description, deadline)
        self.tasks.append(task)

    def complete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_completed()

    def show_active_tasks(self):
        print("\nüî∏ –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏:")
        for task in self.tasks:
            if not task.completed:
                print(task)


#–®–∞–≥ 2

class Store:
    def __init__(self, name, address):
        self.name = name
        self.address = address
        self.items = {}

    def add_item(self, name, price):
        self.items[name] = price

    def remove_item(self, name):
        if name in self.items:
            del self.items[name]

    def get_price(self, name):
        return self.items.get(name)

    def update_price(self, name, new_price):
        if name in self.items:
            self.items[name] = new_price

    def __str__(self):
        return f"{self.name} ‚Äî {self.address}"


#–®–∞–≥ 3

# --- –†–∞–±–æ—Ç–∞ —Å –∑–∞–¥–∞—á–∞–º–∏ ---
manager = TaskManager()
manager.add_task("–°–¥–µ–ª–∞—Ç—å –¥–æ–º–∞—à–∫—É –ø–æ Python", "2025-06-15")
manager.add_task("–ü—Ä–æ–π—Ç–∏ —É—Ä–æ–∫ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ", "2025-06-16")
manager.add_task("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", "2025-06-17")

manager.complete_task(0)

manager.show_active_tasks()


# --- –†–∞–±–æ—Ç–∞ —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ ---
store1 = Store("–§—Ä—É–∫—Ç–æ–≤—ã–π —Ä–∞–π", "—É–ª. –Ø–±–ª–æ—á–Ω–∞—è, 1")
store2 = Store("–ó–µ–ª–µ–Ω—ã–π —É–≥–æ–ª–æ–∫", "—É–ª. –ë–∞–Ω–∞–Ω–æ–≤–∞—è, 5")
store3 = Store("–û–≤–æ—â–Ω–æ–π –º–∏—Ä", "—É–ª. –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–∞—è, 10")

store1.add_item("—è–±–ª–æ–∫–∏", 0.5)
store1.add_item("–±–∞–Ω–∞–Ω—ã", 0.8)

store2.add_item("–∞–ø–µ–ª—å—Å–∏–Ω—ã", 0.9)
store2.add_item("–º–∞–Ω–¥–∞—Ä–∏–Ω—ã", 1.1)

store3.add_item("–∫–∞—Ä—Ç–æ—à–∫–∞", 0.4)
store3.add_item("–ª—É–∫", 0.3)

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤
print("\nüì¶", store1)
print("–¶–µ–Ω–∞ –Ω–∞ –±–∞–Ω–∞–Ω—ã:", store1.get_price("–±–∞–Ω–∞–Ω—ã"))

store1.update_price("–±–∞–Ω–∞–Ω—ã", 0.75)
print("–ù–æ–≤–∞—è —Ü–µ–Ω–∞ –Ω–∞ –±–∞–Ω–∞–Ω—ã:", store1.get_price("–±–∞–Ω–∞–Ω—ã"))

store1.remove_item("—è–±–ª–æ–∫–∏")
print("–¶–µ–Ω–∞ –Ω–∞ —è–±–ª–æ–∫–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:", store1.get_price("—è–±–ª–æ–∫–∏"))
